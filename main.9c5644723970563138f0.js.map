{"version":3,"sources":["webpack:///./index.js","webpack:///./js/promise-1.js","webpack:///./js/promise-2.js","webpack:///./js/promise-3.js"],"names":["refs","btnOne","document","querySelector","btnTwo","btnThree","addEventListener","console","clear","delay","ms","Promise","resolve","setTimeout","logger","time","log","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","table","makeTransaction","transaction","min","max","Math","floor","random","reject","id","logSuccess","ob","logError","warn","amount","catch"],"mappings":"qLAKA,IAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,WAC/BC,OAAQF,SAASC,cAAc,WAC/BE,SAAUH,SAASC,cAAc,YAEnCH,EAAKC,OAAOK,iBAAiB,SCVd,WACbC,QAAQC,QAER,IAAMC,EAAQ,SAAAC,GAEZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,WACTD,EAAQF,KACPA,OAIDI,EAAS,SAAAC,GAAI,OAAIR,QAAQS,IAAR,kBAA8BD,EAA9B,OAGvBN,EAAM,KAAMQ,KAAKH,GACjBL,EAAM,KAAMQ,KAAKH,GACjBL,EAAM,MAAMQ,KAAKH,MDNnBd,EAAKI,OAAOE,iBAAiB,SEXd,WACbC,QAAQC,QACR,IAAMU,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACjC,IAAMC,EAAeF,EAASG,KAAI,SAAAC,GAAI,OACpCA,EAAKP,OAASI,EAAd,iBAA8BG,EAA9B,CAAoCN,QAASM,EAAKN,SAAWM,KAE/D,OAAO,IAAIf,SAAQ,SAAAC,GACjBA,EAAQY,OAINV,EAAS,SAAAU,GAAY,OAAIjB,QAAQoB,MAAMH,IAE7CH,EAAgBH,EAAO,SAASD,KAAKH,GACrCO,EAAgBH,EAAO,OAAOD,KAAKH,MFTrCd,EAAKK,SAASC,iBAAiB,SGZhB,WACbC,QAAQC,QACR,IAIMoB,EAAkB,SAAAC,GACtB,IALiCC,EAAKC,EAKhCtB,GAL2BqB,EAKO,IALFC,EAKO,IAJtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAKpD,OAAO,IAAInB,SAAQ,SAACC,EAASuB,GAC3BtB,YAAW,WACUmB,KAAKE,SAAW,GAEjCtB,EAAQ,CAAEiB,cAAapB,UAEvB0B,EAAON,EAAYO,MAEpB3B,OAID4B,EAAa,SAAAC,GACjB/B,QAAQS,IAAR,eAA2BsB,EAAGT,YAAYO,GAA1C,kBAA8DE,EAAG7B,MAAjE,OAGI8B,EAAW,SAAAH,GACf7B,QAAQiC,KAAR,gCAA6CJ,EAA7C,8BAGFR,EAAgB,CAAEQ,GAAI,GAAIK,OAAQ,MAAOxB,KAAKoB,GAAYK,MAAMH,GAEhEX,EAAgB,CAAEQ,GAAI,GAAIK,OAAQ,MAAOxB,KAAKoB,GAAYK,MAAMH,GAEhEX,EAAgB,CAAEQ,GAAI,GAAIK,OAAQ,KAAMxB,KAAKoB,GAAYK,MAAMH,GAE/DX,EAAgB,CAAEQ,GAAI,GAAIK,OAAQ,MAAOxB,KAAKoB,GAAYK,MAAMH,Q","file":"main.9c5644723970563138f0.js","sourcesContent":["import './styles.css';\r\n\r\nimport taskOne from './js/promise-1';\r\nimport taskTwo from './js/promise-2';\r\nimport taskThree from './js/promise-3';\r\nconst refs = {\r\n  btnOne: document.querySelector('#task-1'),\r\n  btnTwo: document.querySelector('#task-2'),\r\n  btnThree: document.querySelector('#task-3'),\r\n};\r\nrefs.btnOne.addEventListener('click', taskOne);\r\nrefs.btnTwo.addEventListener('click', taskTwo);\r\nrefs.btnThree.addEventListener('click', taskThree);\r\n","export default function taskOne() {\r\n  console.clear();\r\n\r\n  const delay = ms => {\r\n    // Твой код\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve(ms);\r\n      }, ms);\r\n    });\r\n  };\r\n\r\n  const logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n  // Вызовы функции для проверки\r\n  delay(2000).then(logger); // Resolved after 2000ms\r\n  delay(1000).then(logger); // Resolved after 1000ms\r\n  delay(1500).then(logger); // Resolved after 1500ms\r\n}\r\n","export default function taskTwo() {\r\n  console.clear();\r\n  const users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: true },\r\n    { name: 'Lux', active: false },\r\n  ];\r\n\r\n  const toggleUserState = (allUsers, userName) => {\r\n    const updatedUsers = allUsers.map(user =>\r\n      user.name === userName ? { ...user, active: !user.active } : user,\r\n    );\r\n    return new Promise(resolve => {\r\n      resolve(updatedUsers);\r\n    });\r\n  };\r\n\r\n  const logger = updatedUsers => console.table(updatedUsers);\r\n\r\n  toggleUserState(users, 'Mango').then(logger);\r\n  toggleUserState(users, 'Lux').then(logger);\r\n}\r\n","export default function taskThree() {\r\n  console.clear();\r\n  const randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const makeTransaction = transaction => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const canProcess = Math.random() > 0.3;\r\n        if (canProcess) {\r\n          resolve({ transaction, delay });\r\n        } else {\r\n          reject(transaction.id);\r\n        }\r\n      }, delay);\r\n    });\r\n  };\r\n\r\n  const logSuccess = ob => {\r\n    console.log(`Transaction ${ob.transaction.id}  processed in ${ob.delay}ms`);\r\n  };\r\n\r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n\r\n  makeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\n  makeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\n  makeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\n  makeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n}\r\n"],"sourceRoot":""}